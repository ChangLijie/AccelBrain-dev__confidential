on:
  push:
    branches:
      - test
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract latest CHANGELOG entry and version
        id: changelog
        run: |

          CHANGELOG_CONTENT=$(awk 'BEGIN {print_section=0;} /^## \[/ {if (print_section == 0) {print_section=1;} else {exit;} } print_section {print;}' CHANGELOG.md)

          # 改用 sed 提取版本號
          VERSION=$(echo "$CHANGELOG_CONTENT" | sed -n 's/^## \[\(v[0-9]\+\.[0-9]\+\(\.[0-9]\+\)*\)\].*/\1/p')

          CHANGELOG_ESCAPED=$(echo "$CHANGELOG_CONTENT" | sed ':a;N;$!ba;s/\n/%0A/g')

          echo "Extracted latest release notes from CHANGELOG.md:"
          echo -e "$CHANGELOG_CONTENT"
          echo "Version: $VERSION"

          # 設定 output
          echo "content=$CHANGELOG_ESCAPED" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        id: create_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const changelog = `${{ steps.changelog.outputs.content }}`;
            const version = `${{ steps.changelog.outputs.version }}`;

            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: version,
              name: version,
              body: changelog,
            });
            console.log(`Created release ${release.data.html_url}`);

      - name: Upload package to GitHub release
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            .
            !.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
